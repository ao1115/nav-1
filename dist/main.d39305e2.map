{"version":3,"sources":["main.js"],"names":["$siteList","$","$lastLi","find","x","localStorage","getItem","xObject","JSON","parse","hashMap","logo","url","simplifyUrl","replace","render","remove","forEach","node","index","$li","insertBefore","on","window","open","e","stopPropagation","splice","prompt","indexOf","push","toUpperCase","onbeforeunload","string","stringify","setItem","document","key","i","length","toLowerCase"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,YAAYC,EAAE,WAAF,CAAlB;AACA,IAAMC,UAAUD,EAAE,WAAF,EAAeE,IAAf,CAAoB,SAApB,CAAhB;AACA,IAAMC,IAAIC,aAAaC,OAAb,CAAqB,GAArB,CAAV,EAAqC;AACrC,IAAMC,UAAUC,KAAKC,KAAL,CAAWL,CAAX,CAAhB;AACA,IAAMM,UAAUH,WAAW;AACzB;AACA,EAAEI,MAAM,GAAR,EAAaC,KAAK,qBAAlB,EAFyB,EAGzB,EAAED,MAAM,GAAR,EAAaC,KAAK,yBAAlB,EAHyB,CAA3B;;AAMA,IAAMC,cAAc,SAAdA,WAAc,CAACD,GAAD,EAAS;AAC3B,WAAOA,IACJE,OADI,CACI,UADJ,EACgB,EADhB,EAEJA,OAFI,CAEI,SAFJ,EAEe,EAFf,EAGJA,OAHI,CAGI,MAHJ,EAGY,EAHZ,EAIJA,OAJI,CAII,MAJJ,EAIY,EAJZ,CAAP,CAD2B,CAKH;AACzB,CAND;;AAQA,IAAMC,SAAS,SAATA,MAAS,GAAM;AACnBf,cAAUG,IAAV,CAAe,eAAf,EAAgCa,MAAhC;AACAN,YAAQO,OAAR,CAAgB,UAACC,IAAD,EAAMC,KAAN,EAAgB;AAC9B,YAAMC,MAAMnB,6FAGEiB,KAAKP,IAHP,gPAUgBE,YAAYK,KAAKN,GAAjB,CAVhB,wCAYJS,YAZI,CAYSnB,OAZT,CAAZ;AAaAkB,YAAIE,EAAJ,CAAO,OAAP,EAAgB,YAAM;AAClBC,mBAAOC,IAAP,CAAYN,KAAKN,GAAjB;AACH,SAFD;;AAIAQ,YAAIE,EAAJ,CAAO,OAAP,EAAgB,QAAhB,EAAyB,UAACG,CAAD,EAAM;AAC3BA,cAAEC,eAAF,GAD2B,CACP;AACpBhB,oBAAQiB,MAAR,CAAeR,KAAf,EAAsB,CAAtB;AACAJ;AACH,SAJD;AAKD,KAvBD;AAwBD,CA1BD;;AA6BAA;;AAEAd,EAAE,YAAF,EAAgBqB,EAAhB,CAAmB,OAAnB,EAA4B,YAAM;AAChC,QAAIV,MAAMW,OAAOK,MAAP,CAAc,aAAd,CAAV;AACA,QAAIhB,IAAIiB,OAAJ,CAAY,MAAZ,MAAwB,CAA5B,EAA+B;AAC7B;AACAjB,cAAM,aAAaA,GAAnB;AACD;AACDF,YAAQoB,IAAR,CAAa;AACXnB,cAAME,YAAYD,GAAZ,EAAiB,CAAjB,EAAoBmB,WAApB,EADK;AAEXnB,aAAKA;AAFM,KAAb;AAIAG;AACD,CAXD;AAYAQ,OAAOS,cAAP,GAAwB,YAAM;AAC5B;AACA,QAAMC,SAASzB,KAAK0B,SAAL,CAAexB,OAAf,CAAf,CAF4B,CAEY;AACxCL,iBAAa8B,OAAb,CAAqB,GAArB,EAA0BF,MAA1B,EAH4B,CAGO;AACpC,CAJD;;AAMAhC,EAAEmC,QAAF,EAAYd,EAAZ,CAAe,UAAf,EAA2B,UAACG,CAAD,EAAO;AAAA,QACtBY,GADsB,GACdZ,CADc,CACtBY,GADsB,EACZ;;AAClB,SAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAI5B,QAAQ6B,MAA5B,EAAoCD,GAApC,EAAwC;AACpC,YAAI5B,QAAQ4B,CAAR,EAAW3B,IAAX,CAAgB6B,WAAhB,OAAkCH,GAAtC,EAA2C;AACvCd,mBAAOC,IAAP,CAAYd,QAAQ4B,CAAR,EAAW1B,GAAvB;AACH;AACJ;AACJ,CAPD","file":"main.d39305e2.map","sourceRoot":"..\\src","sourcesContent":["const $siteList = $(\".siteList\");\r\nconst $lastLi = $(\".siteList\").find(\"li.last\");\r\nconst x = localStorage.getItem(\"x\"); //读取当前网站下的x\r\nconst xObject = JSON.parse(x);\r\nconst hashMap = xObject || [\r\n  //如果x可以读取就读取x,否则初始化为一个含有两项的数组\r\n  { logo: \"A\", url: \"http://www.acfun.cn\" },\r\n  { logo: \"B\", url: \"http://www.bilibili.com\" },\r\n];\r\n\r\nconst simplifyUrl = (url) => {\r\n  return url\r\n    .replace(\"https://\", \"\")\r\n    .replace(\"http://\", \"\")\r\n    .replace(\"www.\", \"\")\r\n    .replace(/\\/.*/, \"\"); //用正则表达式删除后面/开头的所有内容\r\n};\r\n\r\nconst render = () => {\r\n  $siteList.find(\"li:not(.last)\").remove();\r\n  hashMap.forEach((node,index) => {\r\n    const $li = $(`<li>\r\n        <div class=\"site\">\r\n            <div class=\"logo\">\r\n                ${node.logo}\r\n            </div>\r\n            <div class=\"close\">\r\n                <svg class=\"icon\">\r\n                     <use xlink:href=\"#icon-close\"></use>\r\n                </svg>\r\n            </div>\r\n            <div class=\"link\">${simplifyUrl(node.url)}</div>\r\n        </div>\r\n    </li>`).insertBefore($lastLi);\r\n    $li.on('click', () => {\r\n        window.open(node.url)\r\n    })\r\n    \r\n    $li.on('click', '.close',(e)=> {\r\n        e.stopPropagation() //阻止冒泡\r\n        hashMap.splice(index, 1)\r\n        render()\r\n    })    \r\n  });\r\n};\r\n\r\n\r\nrender();\r\n\r\n$(\".addButton\").on(\"click\", () => {\r\n  let url = window.prompt(\"请问你要访问的网址是？\");\r\n  if (url.indexOf(\"http\") !== 0) {\r\n    //如果http不存在就给加上\r\n    url = \"https://\" + url;\r\n  }\r\n  hashMap.push({\r\n    logo: simplifyUrl(url)[0].toUpperCase(),\r\n    url: url,\r\n  });\r\n  render();\r\n});\r\nwindow.onbeforeunload = () => {\r\n  //自动保存\r\n  const string = JSON.stringify(hashMap); //只能存字符串，所以先转为字符串\r\n  localStorage.setItem(\"x\", string); //在本地的x里面存入哈希表\r\n};\r\n\r\n$(document).on('keypress', (e) => {\r\n    const { key } = e //  const key = e.key\r\n    for (let i = 0; i < hashMap.length; i++){\r\n        if (hashMap[i].logo.toLowerCase() === key) {\r\n            window.open(hashMap[i].url)\r\n        }\r\n    }\r\n})\r\n"]}